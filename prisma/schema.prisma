generator client {
  provider         = "prisma-client-js"
  connection_limit = "1"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model author {
  id         String   @id(map: "Author_pkey") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId     String   @unique(map: "Author_userId_key") @db.Uuid
  created_at DateTime @default(now()) @db.Timestamptz(6)
  user       user     @relation(fields: [userId], references: [id], onUpdate: Restrict, map: "Author_userId_fkey")
  story      story?
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model genre {
  id           BigInt         @id(map: "Genre_pkey") @default(autoincrement())
  genre_name   String         @unique(map: "Genre_genre_name_key") @db.VarChar
  created_at   DateTime       @default(now()) @db.Timestamptz(6)
  story_genres story_genres[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model story {
  id           BigInt         @id(map: "Story_pkey") @default(autoincrement())
  title        String         @db.VarChar
  description  String?        @db.VarChar
  read_count   BigInt
  author_Id    String         @unique(map: "Story_author_Id_key") @db.Uuid
  created_at   DateTime       @default(now()) @db.Timestamptz(6)
  author       author         @relation(fields: [author_Id], references: [id], onUpdate: Restrict, map: "Story_author_Id_fkey")
  story_genres story_genres[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model story_genres {
  id         BigInt   @id @default(autoincrement())
  story_id   BigInt
  genre_id   BigInt
  created_at DateTime @default(now()) @db.Timestamptz(6)
  genre      genre    @relation(fields: [genre_id], references: [id], onDelete: Cascade)
  story      story    @relation(fields: [story_id], references: [id], onDelete: Cascade)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model user {
  id            String         @id(map: "User_pkey") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  first_name    String?        @db.VarChar
  middle_name   String?        @db.VarChar
  last_name     String?        @db.VarChar
  gender        String?        @db.VarChar
  dob           DateTime       @db.Date
  username      String         @unique(map: "User_username_key") @db.VarChar
  email         String         @unique(map: "User_email_key") @db.VarChar
  password      String         @db.VarChar
  created_at    DateTime       @default(now()) @db.Timestamptz(6)
  display_name  String?        @db.VarChar
  author        author?
  last_login    last_login?
  login_history login_history?
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model last_login {
  id               String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id          String   @unique @db.Uuid
  last_ip          String   @db.Inet
  last_city        String   @db.VarChar
  last_country     String   @db.VarChar
  last_device_hash String   @db.VarChar
  last_login_at    DateTime @default(now()) @db.Timestamp(6)
  last_region_name String
  user             user     @relation(fields: [user_id], references: [id], onUpdate: Restrict)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model login_history {
  id                 String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id            String   @unique @db.Uuid
  ip                 BigInt
  city               String   @db.VarChar
  country            String   @db.VarChar
  debice_hash        String   @db.VarChar
  login_at           DateTime @db.Timestamp(6)
  risk_score         Int
  is_current_session Boolean
  created_at         DateTime @default(now()) @db.Timestamptz(6)
  user               user     @relation(fields: [user_id], references: [id], onUpdate: Restrict)
}
